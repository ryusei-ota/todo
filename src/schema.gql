# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserCount {
  todo: Int!
}

type User {
  id: ID!
  todo: [Todo!]
  name: String
  createdAt: DateTime!
  updatedAt: DateTime!
  _count: UserCount!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Todo {
  id: ID!
  todo: String!
  limit: DateTime!
  done_at: Boolean!
  user: User
  userId: Int
}

type Query {
  todo(where: TodoWhereInput, orderBy: [TodoOrderByWithRelationInput!], cursor: TodoWhereUniqueInput, take: Int, skip: Int, distinct: [TodoScalarFieldEnum!]): Todo!
  findAll(where: TodoWhereInput, orderBy: [TodoOrderByWithRelationInput!], cursor: TodoWhereUniqueInput, take: Int, skip: Int, distinct: [TodoScalarFieldEnum!]): [Todo!]!
}

input TodoWhereInput {
  AND: [TodoWhereInput!]
  OR: [TodoWhereInput!]
  NOT: [TodoWhereInput!]
  id: IntFilter
  todo: StringFilter
  limit: DateTimeFilter
  done_at: BoolFilter
  user: UserRelationFilter
  userId: IntNullableFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input NestedIntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IntFilter
  todo: TodoListRelationFilter
  name: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input TodoListRelationFilter {
  every: TodoWhereInput
  some: TodoWhereInput
  none: TodoWhereInput
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input NestedIntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input TodoOrderByWithRelationInput {
  id: SortOrder
  todo: SortOrder
  limit: SortOrder
  done_at: SortOrder
  user: UserOrderByWithRelationInput
  userId: SortOrder
}

enum SortOrder {
  asc
  desc
}

input UserOrderByWithRelationInput {
  id: SortOrder
  todo: TodoOrderByRelationAggregateInput
  name: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input TodoOrderByRelationAggregateInput {
  _count: SortOrder
}

input TodoWhereUniqueInput {
  id: Int
}

enum TodoScalarFieldEnum {
  id
  todo
  limit
  done_at
}

type Mutation {
  createTodo(data: UserCreateInput!): User!
  updateTodo(data: TodoUpdateInput!, where: TodoWhereUniqueInput!): Todo!
  deleteTodo(where: TodoWhereUniqueInput!): Todo!
}

input UserCreateInput {
  todo: TodoCreateNestedManyWithoutUserInput
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

input TodoCreateNestedManyWithoutUserInput {
  create: [TodoCreateWithoutUserInput!]
  connectOrCreate: [TodoCreateOrConnectWithoutUserInput!]
  connect: [TodoWhereUniqueInput!]
}

input TodoCreateWithoutUserInput {
  todo: String!
  limit: DateTime!
  done_at: Boolean!
}

input TodoCreateOrConnectWithoutUserInput {
  where: TodoWhereUniqueInput!
  create: TodoCreateWithoutUserInput!
}

input TodoUpdateInput {
  todo: StringFieldUpdateOperationsInput
  limit: DateTimeFieldUpdateOperationsInput
  done_at: BoolFieldUpdateOperationsInput
  user: UserUpdateOneWithoutTodoInput
}

input StringFieldUpdateOperationsInput {
  set: String
}

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input UserUpdateOneWithoutTodoInput {
  create: UserCreateWithoutTodoInput
  connectOrCreate: UserCreateOrConnectWithoutTodoInput
  upsert: UserUpsertWithoutTodoInput
  disconnect: Boolean
  delete: Boolean
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutTodoInput
}

input UserCreateWithoutTodoInput {
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

input UserCreateOrConnectWithoutTodoInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutTodoInput!
}

input UserWhereUniqueInput {
  id: Int
}

input UserUpsertWithoutTodoInput {
  update: UserUpdateWithoutTodoInput!
  create: UserCreateWithoutTodoInput!
}

input UserUpdateWithoutTodoInput {
  name: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}
