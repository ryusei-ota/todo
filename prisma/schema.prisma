// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator nestgraphql {
   provider = "node node_modules/prisma-nestjs-graphql"
   output = "../src/@generated/prisma-nestjs-graphql"
   fields_Validator_from = "class-validator"
   fields_Validator_input = true
   decorate_1_type        = "CreateOne*Args"
   decorate_1_field       = data
   decorate_1_name        = ValidateNested
   decorate_1_from        = "class-validator"
   decorate_1_arguments   = "[]"
   decorate_2_type        = "CreateOne*Args"
   decorate_2_field       = data
   decorate_2_from        = "class-transformer"
   decorate_2_arguments   = "['() => {propertyType.0}']"
   decorate_2_name        = Type
 }

// N
model Todo{
 /// @Field(type => Int)
  id Int @id @default(autoincrement())
  /// @IsNotEmpty()
  ///@IsString()
  todo String
  /// @IsNotEmpty()
  ///@IsString()
  limit DateTime
  ///@IsBoolean()
  done_at  Boolean
  user  User?    @relation(fields: [userId], references: [id])
	userId  Int?
}

// 1
model User{
  /// @Field(type => Int)
  id Int @id @default(autoincrement())
  todo Todo[]
  /// @Validator.IsEmail()
  email       String    @unique
  /// @Validator.IsNotEmpty()
  name        String
  /// @HideField()
  /// @Validator.MinLength(8)
  password    String
  /// @HideField({ input: true, output: true })
  hashedRefreshToken String?
  /// @HideField({ input: true, output: true })
  createdAt DateTime @default(now())
  /// @HideField({ input: true, output: true })
  updatedAt DateTime @updatedAt
}